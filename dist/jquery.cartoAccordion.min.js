!function(t){var n={};function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=3)}([,function(t,n,e){},function(t,n){var e;Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector),(e=jQuery).fn.cartoAccordion=function(t){const n=this,o=e.extend({},{openInitial:1,stayOpen:!1,animationDuration:"fast",onToggle:function(t){}},t),r=function(t,n){for(var o=[],r=t.children();0==o.length&&r.length>0;){var i=[];r.each(function(){this.matches(n)?o.push(e(this)):i.push(e(this).children())}),r=e(i).map(function(){return this.toArray()})}return e(o).map(function(){return this.toArray()})};return function(){n.hasClass("accordion")||n.addClass("accordion");const t=r(n,".accordion-toggle"),i=r(n,".accordion-content");t.off("click"),t.click(function(n){const r=e(n.currentTarget);r.toggleClass("active"),r.next().slideToggle(o.animationDuration),o.stayOpen||(t.not(e(this)).removeClass("active"),i.not(e(this).next()).slideUp(o.animationDuration)),"function"==typeof o.onToggle&&o.onToggle(r)}),0==o.openInitial?t.not(".active").next(".accordion-content").hide():(t.removeClass("active"),i.hide(),t.eq(o.openInitial-1).trigger("click"))}(),this}},function(t,n,e){e(2),t.exports=e(1)}]);